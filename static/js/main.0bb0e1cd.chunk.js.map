{"version":3,"sources":["assets/fonts/proxima-nova/ProximaNova-Regular.ttf","assets/fonts/proxima-nova/ProximaNova-Regular.woff","assets/fonts/proxima-nova/ProximaNova-Regular.woff2","assets/fonts/proxima-nova/ProximaNova-Regular.otf","tokens/fonts.ts","components/typography/heading.tsx","components/typography/text.tsx","tokens/globalStyle.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fallbackFontStack","mainFont","fontFamily","regular","bold","fonts","heading","body","globalFonts","ProximaNovaRegularOtf","ProximaNovaRegularTtf","ProximaNovaRegularWoff2","ProximaNovaRegularWoff","HeadingStyle","styled","div","props","fontSize","Heading","as","children","TextStyle","p","color","Text","React","forwardRef","ref","rest","GlobalStyle","createGlobalStyle","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAe,MAA0B,gDCA1B,MAA0B,iDCA1B,MAA0B,kDCA1B,MAA0B,gDCOnCA,EAAoB,oCACpBC,EAAW,eAEJC,EAAa,CACxBC,QAAQ,GAAD,OAAKF,GACZG,KAAK,GAAD,OAAKH,EAAL,UAIOI,EAAQ,CACnBC,QAAQ,GAAD,OAAKJ,EAAWE,KAAhB,aAAyBJ,GAChCO,KAAK,GAAD,OAAKL,EAAWC,QAAhB,aAA4BH,IAGrBQ,EAAW,qEAGXC,EAHW,0CAIdC,EAJc,qCAKdC,EALc,uCAMdC,EANc,iHAUVZ,EAVU,U,OCXlBa,EAAeC,IAAOC,IAAV,+GACDV,EAAMC,SAER,SAACU,GAAD,OAAWA,EAAMC,YAInBC,EAA4B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,SAAUH,EAAe,EAAfA,SACxD,OACE,cAACJ,EAAD,CAAcM,GAAIA,EAAIF,SAAUA,EAAhC,SACGG,K,2BCVMC,EAAYP,IAAOQ,EAAV,qFACX,SAACN,GAAD,OAAWA,EAAMO,QACXlB,EAAME,MAIViB,EAA4BC,IAAMC,YAC7C,WAAqBC,GAAc,IAAhCJ,EAA+B,EAA/BA,MAAUK,EAAqB,iBAChC,OAAO,cAACP,EAAD,yBAAWE,MAAOA,GAAWK,GAA7B,IAAmCD,IAAKA,QCbpCE,EAFKC,YAAH,4BAAuBtB,GC+DzBuB,MA7Df,WACE,OACE,qCACE,cAAC,EAAD,IACA,sBAAKC,UAAU,MAAf,UACE,oCACE,cAAC,EAAD,CAASb,GAAG,KAAZ,8CACA,cAAC,EAAD,CAASA,GAAG,KAAZ,yCACA,cAAC,EAAD,CAASA,GAAG,KAAZ,yCAEA,cAACK,EAAD,m3BAkBF,oCACE,cAAC,EAAD,CAASL,GAAG,KAAKF,SAAS,OAA1B,2CAGA,cAAC,EAAD,CAASE,GAAG,KAAKF,SAAS,SAA1B,0CAGA,cAAC,EAAD,CAASE,GAAG,KAAKF,SAAS,SAA1B,0CAIA,cAACO,EAAD,03BC9BKS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0bb0e1cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ProximaNova-Regular.dec7e81e.ttf\";","export default __webpack_public_path__ + \"static/media/ProximaNova-Regular.6061578c.woff\";","export default __webpack_public_path__ + \"static/media/ProximaNova-Regular.29a7c7f0.woff2\";","export default __webpack_public_path__ + \"static/media/ProximaNova-Regular.7bc9ce40.otf\";","import {\n  ProximaNovaRegularOtf,\n  ProximaNovaRegularTtf,\n  ProximaNovaRegularWoff,\n  ProximaNovaRegularWoff2,\n} from \"../assets/fonts\";\n\nconst fallbackFontStack = \"Helvetica Neue, Arial, sans-serif\";\nconst mainFont = \"Proxima Nova\";\n\nexport const fontFamily = {\n  regular: `${mainFont}`,\n  bold: `${mainFont} Bold`,\n};\n\n// Font Sizes\nexport const fonts = {\n  heading: `${fontFamily.bold}, ${fallbackFontStack}`,\n  body: `${fontFamily.regular}, ${fallbackFontStack}`,\n};\n\nexport const globalFonts = `\n@font-face {\n  font-family: 'Proxima Nova';\n  src: url(${ProximaNovaRegularOtf}) format('opentype'),\n    url(${ProximaNovaRegularTtf}) format('ttf'),\n    url(${ProximaNovaRegularWoff2}) format('woff2'),\n    url(${ProximaNovaRegularWoff}) format('woff');\n  font-weight: 400;\n  font-style: normal;\n  font-display: optional;\n  fallback: ${fallbackFontStack};\n}\n`;\n","import styled from \"styled-components\";\nimport React, { FC, ReactNode } from \"react\";\nimport { fonts } from \"../../tokens/fonts\";\n\nexport type HeadingProps = {\n  as: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  children: JSX.Element | JSX.Element[] | ReactNode | string;\n  fontSize?: string;\n};\n\nconst HeadingStyle = styled.div<HeadingProps>`\n  font-family: ${fonts.heading};\n  line-height: 1.25;\n  font-size: ${(props) => props.fontSize};\n  color: \"darkgrey\";\n`;\n\nexport const Heading: FC<HeadingProps> = ({ as, children, fontSize }) => {\n  return (\n    <HeadingStyle as={as} fontSize={fontSize}>\n      {children}\n    </HeadingStyle>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fonts } from \"../../tokens/fonts\";\n\nexport type TypeProps = {\n  fontWeight?: \"bold\" | \"regular\" | \"semibold\";\n  color?: string;\n  ref?: any;\n};\n\nexport const TextStyle = styled.p<TypeProps>`\n  color: ${(props) => props.color};\n  font-family: ${fonts.body};\n  line-height: 1.4;\n`;\n\nexport const Text: React.FC<TypeProps> = React.forwardRef(\n  ({ color, ...rest }, ref: any) => {\n    return <TextStyle color={color} {...rest} ref={ref} />;\n  }\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { globalFonts } from \"./fonts\";\n\nconst GlobalStyle = createGlobalStyle`${globalFonts}`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Heading, Text } from \"./components/typography\";\nimport GlobalStyle from \"./tokens/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <div className=\"App\">\n        <section>\n          <Heading as=\"h1\">Browser default size with H1 tag</Heading>\n          <Heading as=\"h2\">Browser default size H2 tag</Heading>\n          <Heading as=\"h3\">Browser default size H3 tag</Heading>\n\n          <Text>\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n            accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n            quae ab illo inventore veritatis et quasi architecto beatae vitae\n            dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n            aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n            eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est,\n            qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit,\n            sed quia non numquam eius modi tempora incidunt ut labore et dolore\n            magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis\n            nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut\n            aliquid ex ea commodi consequatur? Quis autem vel eum iure\n            reprehenderit qui in ea voluptate velit esse quam nihil molestiae\n            consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla\n            pariatur?\n          </Text>\n        </section>\n\n        <section>\n          <Heading as=\"h1\" fontSize=\"14px\">\n            H1 with fontSize prop at 14px\n          </Heading>\n          <Heading as=\"h2\" fontSize=\"1.2rem\">\n            H2 with fontSize prop 1.2rem\n          </Heading>\n          <Heading as=\"h3\" fontSize=\"1.7rem\">\n            H3 with fontSize prop 1.7rem\n          </Heading>\n\n          <Text>\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n            accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n            quae ab illo inventore veritatis et quasi architecto beatae vitae\n            dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n            aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n            eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est,\n            qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit,\n            sed quia non numquam eius modi tempora incidunt ut labore et dolore\n            magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis\n            nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut\n            aliquid ex ea commodi consequatur? Quis autem vel eum iure\n            reprehenderit qui in ea voluptate velit esse quam nihil molestiae\n            consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla\n            pariatur?\n          </Text>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}